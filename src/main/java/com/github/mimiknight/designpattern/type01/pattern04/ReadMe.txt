# 工厂方法模式

## 概念：
工厂方法模式将工厂抽象化，并定义一个创建对象的接口。
每增加新产品，只需增加该产品以及对应的具体实现工厂类，由具体工厂类决定要实例化的产品是哪个，将对象的创建与实例化延迟到子类，
这样工厂的设计就符合“开闭原则”了，扩展时不必去修改原来的代码。在使用时，用于只需知道产品对应的具体工厂，关注具体的创建过程，
甚至不需要知道具体产品类的类名，当我们选择哪个具体工厂时，就已经决定了实际创建的产品是哪个了；
但缺点在于，每增加一个产品都需要增加一个具体产品类和实现工厂类，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，
同时也增加了系统具体类的依赖。

但是工厂方法可以很好的解决开闭原则的问题，可是工厂方法只能创建一种产品，一种产品只能对应一种工厂；
因此，当产品过多的时候，也就增加了复杂度，过多的类，也就造成了所谓的 ‘类爆炸’问题；为了解决这个问题，就又出现了‘抽象工厂模式’。

## 优点

## 缺点

## 应用场景