# 装饰设计模式

## 概念
装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。这种类型的设计模式属于结构型模式，它是作为现有的类的一个包装。
装饰器模式通过将对象包装在装饰器类中，以便动态地修改其行为。

##　意图：
动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。

## 主要解决：
一般的，我们为了扩展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。

## 何时使用：
在不想增加很多子类的情况下扩展类。

## 实现步骤：（我的理解）
1.定义被装饰对象的接口并在接口中定义待实现方法
2.定义若干接口实现类
3.定义增强指定方法的装饰抽象类
4.定义装饰抽象类实现类
5.new 装饰实现类并传入被装饰对象
6.通过装饰实现类对象调用被增强方法实现 指定方法的装饰增强



